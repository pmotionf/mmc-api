// Code generated by protoc-gen-zig
///! package mmc
const std = @import("std");
const Allocator = std.mem.Allocator;
const ArrayList = std.ArrayList;

const protobuf = @import("protobuf");
const ManagedString = protobuf.ManagedString;
const fd = protobuf.fd;
const ManagedStruct = protobuf.ManagedStruct;
/// import package mmc.core
const mmc_core = @import("mmc/core.pb.zig");
/// import package mmc.command
const mmc_command = @import("mmc/command.pb.zig");
/// import package mmc.info
const mmc_info = @import("mmc/info.pb.zig");

pub const Request = struct {
    body: ?body_union,

    pub const _body_case = enum {
        command,
        core,
        info,
    };
    pub const body_union = union(_body_case) {
        command: mmc_command.CommandRequest,
        core: mmc_core.CoreRequest,
        info: mmc_info.InfoRequest,
        pub const _union_desc = .{
            .command = fd(1, .{ .SubMessage = {} }),
            .core = fd(2, .{ .SubMessage = {} }),
            .info = fd(3, .{ .SubMessage = {} }),
        };
    };

    pub const _desc_table = .{
        .body = fd(null, .{ .OneOf = body_union }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const Response = struct {
    body: ?body_union,

    pub const _body_case = enum {
        command,
        core,
        info,
    };
    pub const body_union = union(_body_case) {
        command: mmc_command.CommandResponse,
        core: mmc_core.CoreResponse,
        info: mmc_info.InfoRequest,
        pub const _union_desc = .{
            .command = fd(1, .{ .SubMessage = {} }),
            .core = fd(2, .{ .SubMessage = {} }),
            .info = fd(3, .{ .SubMessage = {} }),
        };
    };

    pub const _desc_table = .{
        .body = fd(null, .{ .OneOf = body_union }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};
