syntax = "proto3";
package mmc.core;

/// Core API: Request server configuration
message Request{
  /// List of server configuration to be retrieved
  enum Kind{
    CORE_REQUEST_KIND_UNSPECIFIED = 0;
    CORE_REQUEST_KIND_API_VERSION = 1;
    CORE_REQUEST_KIND_SERVER_INFO = 2;
    CORE_REQUEST_KIND_LINE_CONFIG = 3;
  }
  Kind kind = 1;
}

/// Response description to the core API
message Response{
  /// Line configuration for the system
  message LineConfig{
    message Line{
      uint32 axes = 1;
      string name = 2;
    }
    repeated Line lines = 1;
  }

  /// Version description
  message SemanticVersion{
    uint32 major = 1;
    uint32 minor = 2;
    uint32 patch = 3;
  }

  /// Server version and name
  message Server{
    SemanticVersion version = 1;
    string name = 2;
  }

  /// Error kind description
  enum RequestErrorKind {
    CORE_REQUEST_ERROR_UNSPECIFIED = 0;
    CORE_REQUEST_ERROR_REQUEST_UNKNOWN = 1;
  }

  oneof body{
    Server server = 1;
    SemanticVersion api_version = 2;
    LineConfig line_config = 3;
    /// Error kind if this response's request was invalid.
    RequestErrorKind request_error = 4;
  }
}
